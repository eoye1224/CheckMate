{"ast":null,"code":"import _objectSpread from\"C:/Users/super/checkmate/checkmatecloudflare/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import Header from\"./components/Header\";import TaskList from\"./components/TaskList\";import Analytics from\"./components/Analytics\";import ThemeSelector from\"./components/ThemeSelector\";import Sidebar from\"./components/Sidebar\";import{toggleTaskCompletion,setTaskPriority}from\"./utils\";import\"./styles/App.css\";import\"./styles/TaskItem.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tasks,setTasks]=useState([{id:1,title:\"Welcome to CheckMate! 🎉 Start by completing this task to begin your productivity journey.\",completed:false,priority:\"medium\",dueDate:\"\"},{id:2,title:\"Start small: Add just 1 task that's been on your mind 💆\",completed:false,priority:\"low\",dueDate:\"\"},{id:3,title:\"Do a weekly review of my tasks and goals 🔄\",completed:false,priority:\"high\",dueDate:\"\"},{id:4,title:\"Download CheckMate on your phone for easy access 📱\",completed:false,priority:\"low\",dueDate:\"\"}]);const[filterStatus,setFilterStatus]=useState(\"all\");const[theme,setTheme]=useState(\"light\");const[searchQuery,setSearchQuery]=useState(\"\");const[selectedTab,setSelectedTab]=useState(\"all\");// Change \"today\" to \"all\"\nconst[taskInput,setTaskInput]=useState(\"\");// New state for task input\nconst[taskPriority,setTaskPriority]=useState(\"medium\");// New state for task priority\nconst toggleDarkMode=()=>{setTheme(prevTheme=>prevTheme===\"light\"?\"dark\":\"light\");};const toggleTaskCompletion=task=>{return _objectSpread(_objectSpread({},task),{},{completed:!task.completed});};const addTask=(title,priority)=>{if(!title.trim())return;// Prevent empty tasks\nconst newTask={id:Date.now(),title,completed:false,priority:priority||\"medium\"};setTasks(prevTasks=>{const updatedTasks=[...prevTasks,newTask];console.log(\"Tasks after addition:\",updatedTasks);// Log here to confirm the update\nreturn updatedTasks;});};const handleToggleTask=task=>{setTasks(tasks.map(t=>t.id===task.id?toggleTaskCompletion(t):t));};const handleSetPriority=(task,priority)=>{setTasks(tasks.map(t=>t.id===task.id?_objectSpread(_objectSpread({},t),{},{priority:priority}):t// Correct way to update task priority\n));};const handleSearch=query=>{setSearchQuery(query);};const filteredTasks=tasks.filter(task=>task.title.toLowerCase().includes(searchQuery.toLowerCase()));const getTabFilteredTasks=()=>{console.log(\"Before filtering, tasks are:\",tasks);// Log to see all tasks before filtering\nswitch(selectedTab){case\"today\":return tasks.filter(task=>task.dueDate===\"today\");case\"upcoming\":return tasks.filter(task=>task.dueDate&&task.dueDate>\"today\");case\"filtered\":return filteredTasks;default:return tasks;}};return/*#__PURE__*/_jsx(\"div\",{className:theme===\"dark\"?\"dark-mode\":\"\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Sidebar,{onSelectTab:setSelectedTab}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(Header,{onToggleDarkMode:toggleDarkMode,onSearch:handleSearch}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(TaskList,{tasks:getTabFilteredTasks()// This function filters the tasks based on tab\n,filterStatus:filterStatus,onToggleTask:handleToggleTask,onSetPriority:handleSetPriority}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New Task\",value:taskInput,onChange:e=>setTaskInput(e.target.value)// Handle input change\n,className:\"task-input-field\"}),/*#__PURE__*/_jsxs(\"select\",{value:taskPriority,onChange:e=>setTaskPriority(e.target.value)// Handle priority change\n,className:\"priority-selector\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"high\",children:\"High\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"low\",children:\"Low\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(taskInput.trim()){addTask(taskInput,taskPriority);// Add task with priority\nsetTaskInput(\"\");// Clear input field after adding task\n}},children:\"Add Task\"})]})]}),/*#__PURE__*/_jsx(Analytics,{tasks:tasks})]})]})});};export default App;","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","ThemeSelector","Sidebar","toggleTaskCompletion","setTaskPriority","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","id","title","completed","priority","dueDate","filterStatus","setFilterStatus","theme","setTheme","searchQuery","setSearchQuery","selectedTab","setSelectedTab","taskInput","setTaskInput","taskPriority","toggleDarkMode","prevTheme","task","_objectSpread","addTask","trim","newTask","Date","now","prevTasks","updatedTasks","console","log","handleToggleTask","map","t","handleSetPriority","handleSearch","query","filteredTasks","filter","toLowerCase","includes","getTabFilteredTasks","className","children","onSelectTab","onToggleDarkMode","onSearch","onToggleTask","onSetPriority","type","placeholder","value","onChange","e","target","onClick"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport ThemeSelector from \"./components/ThemeSelector\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/TaskItem.css\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"Welcome to CheckMate! 🎉 Start by completing this task to begin your productivity journey.\",\r\n      completed: false,\r\n      priority: \"medium\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Start small: Add just 1 task that's been on your mind 💆\",\r\n      completed: false,\r\n      priority: \"low\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Do a weekly review of my tasks and goals 🔄\",\r\n      completed: false,\r\n      priority: \"high\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Download CheckMate on your phone for easy access 📱\",\r\n      completed: false,\r\n      priority: \"low\",\r\n      dueDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedTab, setSelectedTab] = useState(\"all\"); // Change \"today\" to \"all\"\r\n  const [taskInput, setTaskInput] = useState(\"\");  // New state for task input\r\n  const [taskPriority, setTaskPriority] = useState(\"medium\");  // New state for task priority\r\n\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const toggleTaskCompletion = (task) => {\r\n    return { ...task, completed: !task.completed };\r\n  };\r\n  \r\n  const addTask = (title, priority) => {\r\n    if (!title.trim()) return; // Prevent empty tasks\r\n  \r\n    const newTask = {\r\n      id: Date.now(),\r\n      title,\r\n      completed: false,\r\n      priority: priority || \"medium\",\r\n    };\r\n  \r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = [...prevTasks, newTask];\r\n      console.log(\"Tasks after addition:\", updatedTasks); // Log here to confirm the update\r\n      return updatedTasks;\r\n    });\r\n  };  \r\n\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? toggleTaskCompletion(t) : t)));\r\n  };\r\n\r\n  const handleSetPriority = (task, priority) => {\r\n    setTasks(tasks.map((t) => \r\n      t.id === task.id ? { ...t, priority: priority } : t // Correct way to update task priority\r\n    ));\r\n  };  \r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  const filteredTasks = tasks.filter((task) =>\r\n    task.title.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const getTabFilteredTasks = () => {\r\n    console.log(\"Before filtering, tasks are:\", tasks); // Log to see all tasks before filtering\r\n  \r\n    switch (selectedTab) {\r\n      case \"today\":\r\n        return tasks.filter((task) => task.dueDate === \"today\");\r\n      case \"upcoming\":\r\n        return tasks.filter((task) => task.dueDate && task.dueDate > \"today\");\r\n      case \"filtered\":\r\n        return filteredTasks;\r\n      default:\r\n        return tasks;\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <div className={theme === \"dark\" ? \"dark-mode\" : \"\"}>\r\n      <div className=\"app-container\">\r\n        <Sidebar onSelectTab={setSelectedTab} />\r\n        <div className=\"main-content\">\r\n          <Header onToggleDarkMode={toggleDarkMode} onSearch={handleSearch} />\r\n          <div className=\"task-container\">\r\n          <TaskList\r\n            tasks={getTabFilteredTasks()} // This function filters the tasks based on tab\r\n            filterStatus={filterStatus}\r\n            onToggleTask={handleToggleTask}\r\n            onSetPriority={handleSetPriority}\r\n          />\r\n          {/* console.log(\"Tasks passed to TaskList:\", getTabFilteredTasks()); */}\r\n            <div className=\"task-input\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"New Task\"\r\n                value={taskInput}\r\n                onChange={(e) => setTaskInput(e.target.value)}  // Handle input change\r\n                className=\"task-input-field\"\r\n              />\r\n              <select \r\n                value={taskPriority} \r\n                onChange={(e) => setTaskPriority(e.target.value)}  // Handle priority change\r\n                className=\"priority-selector\"\r\n              >\r\n                <option value=\"high\">High</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"low\">Low</option>\r\n              </select>\r\n              <button\r\n                onClick={() => {\r\n                  if (taskInput.trim()) {\r\n                    addTask(taskInput, taskPriority);  // Add task with priority\r\n                    setTaskInput(\"\");  // Clear input field after adding task\r\n                  }\r\n                }}\r\n              >\r\n                Add Task\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <Analytics tasks={tasks} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}