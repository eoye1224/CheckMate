{"ast":null,"code":"var _jsxFileName = \"/Users/ellieoyebode/Personal-Projects/CheckMate/checkmatecloudflare/src/components/Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Confetti from \"react-confetti\"; // Using a confetti library for the celebration effect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = ({\n  tasks\n}) => {\n  _s();\n  const totalTasks = tasks.length;\n  const completedTasks = tasks.filter(task => task.completed).length;\n  const percentage = totalTasks === 0 ? 0 : completedTasks / totalTasks * 100;\n  const [celebrationTriggered, setCelebrationTriggered] = useState(false);\n  useEffect(() => {\n    if (percentage === 100) {\n      setCelebrationTriggered(true); // Trigger the celebration when all tasks are completed\n      setTimeout(() => setCelebrationTriggered(false), 5000); // Reset after 5 seconds\n    }\n  }, [percentage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics\",\n    children: [celebrationTriggered && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"celebration-container\",\n      children: /*#__PURE__*/_jsxDEV(Confetti, {\n        width: window.innerWidth,\n        height: window.innerHeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Tasks: \", totalTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Completed Tasks: \", completedTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"progress-label\",\n        children: \"Completion Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: `${percentage}%`,\n            backgroundColor: \"green\",\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"F3/Gmf5g/lWUj5Lmp3xzGDhcCWs=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","Confetti","jsxDEV","_jsxDEV","Analytics","tasks","_s","totalTasks","length","completedTasks","filter","task","completed","percentage","celebrationTriggered","setCelebrationTriggered","setTimeout","className","children","width","window","innerWidth","height","innerHeight","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/ellieoyebode/Personal-Projects/CheckMate/checkmatecloudflare/src/components/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Confetti from \"react-confetti\";  // Using a confetti library for the celebration effect\n\nconst Analytics = ({ tasks }) => {\n  const totalTasks = tasks.length;\n  const completedTasks = tasks.filter((task) => task.completed).length;\n  const percentage = totalTasks === 0 ? 0 : (completedTasks / totalTasks) * 100;\n\n  const [celebrationTriggered, setCelebrationTriggered] = useState(false);\n\n  useEffect(() => {\n    if (percentage === 100) {\n      setCelebrationTriggered(true); // Trigger the celebration when all tasks are completed\n      setTimeout(() => setCelebrationTriggered(false), 5000); // Reset after 5 seconds\n    }\n  }, [percentage]);\n\n  return (\n    <div className=\"analytics\">\n      {celebrationTriggered && (\n        <div className=\"celebration-container\">\n          {/* Confetti animation when all tasks are completed */}\n          <Confetti width={window.innerWidth} height={window.innerHeight} />\n        </div>\n      )}\n      <h3>Task Analytics</h3>\n      <p>Total Tasks: {totalTasks}</p>\n      <p>Completed Tasks: {completedTasks}</p>\n      <div className=\"progress-bar-container\">\n        <span className=\"progress-label\">Completion Progress</span>\n        <div className=\"progress-bar\">\n          <div\n            style={{\n              width: `${percentage}%`,\n              backgroundColor: \"green\",\n              height: \"100%\",\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Analytics;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,gBAAgB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM;EAC/B,MAAMC,cAAc,GAAGJ,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC,CAACJ,MAAM;EACpE,MAAMK,UAAU,GAAGN,UAAU,KAAK,CAAC,GAAG,CAAC,GAAIE,cAAc,GAAGF,UAAU,GAAI,GAAG;EAE7E,MAAM,CAACO,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEvEC,SAAS,CAAC,MAAM;IACd,IAAIa,UAAU,KAAK,GAAG,EAAE;MACtBE,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC/BC,UAAU,CAAC,MAAMD,uBAAuB,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,oBACEV,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBJ,oBAAoB,iBACnBX,OAAA;MAAKc,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eAEpCf,OAAA,CAACF,QAAQ;QAACkB,KAAK,EAAEC,MAAM,CAACC,UAAW;QAACC,MAAM,EAAEF,MAAM,CAACG;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACN,eACDxB,OAAA;MAAAe,QAAA,EAAI;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxB,OAAA;MAAAe,QAAA,GAAG,eAAa,EAACX,UAAU;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCxB,OAAA;MAAAe,QAAA,GAAG,mBAAiB,EAACT,cAAc;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCxB,OAAA;MAAKc,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCf,OAAA;QAAMc,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAmB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3DxB,OAAA;QAAKc,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3Bf,OAAA;UACEyB,KAAK,EAAE;YACLT,KAAK,EAAE,GAAGN,UAAU,GAAG;YACvBgB,eAAe,EAAE,OAAO;YACxBP,MAAM,EAAE;UACV;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCIF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAyCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}