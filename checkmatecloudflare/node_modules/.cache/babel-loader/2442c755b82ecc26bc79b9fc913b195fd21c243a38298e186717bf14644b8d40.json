{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport Analytics from \"./components/Analytics\";\nimport ThemeSelector from \"./components/ThemeSelector\";\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\nimport \"./styles/App.css\";\nimport \"./styles/TaskItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // Start with an empty list of tasks\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [theme, setTheme] = useState(\"light\");\n  const [searchQuery, setSearchQuery] = useState(\"\"); // For search functionality\n\n  // Toggle between dark and light mode\n  const toggleDarkMode = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  // Add new task\n  const addTask = (title, priority) => {\n    const newTask = {\n      id: Date.now(),\n      // unique task id based on timestamp\n      title,\n      completed: false,\n      priority,\n      dueDate: \"\" // Default empty due date\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n\n  // Handle task completion toggle\n  const handleToggleTask = task => {\n    setTasks(tasks.map(t => t.id === task.id ? toggleTaskCompletion(t) : t));\n  };\n\n  // Set task priority\n  const handleSetPriority = (task, priority) => {\n    setTasks(tasks.map(t => t.id === task.id ? setTaskPriority(t, priority) : t));\n  };\n\n  // Handle task search\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n\n  // Filter tasks based on search query\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: theme === \"dark\" ? \"dark-mode\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CheckMate: An ADHD-Friendly To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onToggleDarkMode: toggleDarkMode,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks // Pass filtered tasks based on search\n      ,\n      filterStatus: filterStatus,\n      onToggleTask: handleToggleTask,\n      onSetPriority: handleSetPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Analytics, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSelector, {\n      onThemeChange: setTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Task\",\n        id: \"taskTitle\",\n        className: \"task-input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"taskPriority\",\n        className: \"priority-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const title = document.getElementById(\"taskTitle\").value;\n          const priority = document.getElementById(\"taskPriority\").value;\n          if (title) addTask(title, priority);\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"l7nQAm773XMzHfOAasahEA7/D7o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","ThemeSelector","toggleTaskCompletion","setTaskPriority","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filterStatus","setFilterStatus","theme","setTheme","searchQuery","setSearchQuery","toggleDarkMode","prevTheme","addTask","title","priority","newTask","id","Date","now","completed","dueDate","prevTasks","handleToggleTask","task","map","t","handleSetPriority","handleSearch","query","filteredTasks","filter","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onToggleDarkMode","onSearch","onToggleTask","onSetPriority","onThemeChange","type","placeholder","value","onClick","document","getElementById","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport ThemeSelector from \"./components/ThemeSelector\";\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/TaskItem.css\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]); // Start with an empty list of tasks\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // For search functionality\r\n\r\n  // Toggle between dark and light mode\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = (title, priority) => {\r\n    const newTask = {\r\n      id: Date.now(), // unique task id based on timestamp\r\n      title,\r\n      completed: false,\r\n      priority,\r\n      dueDate: \"\", // Default empty due date\r\n    };\r\n    setTasks((prevTasks) => [...prevTasks, newTask]);\r\n  };\r\n\r\n  // Handle task completion toggle\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? toggleTaskCompletion(t) : t)));\r\n  };\r\n\r\n  // Set task priority\r\n  const handleSetPriority = (task, priority) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? setTaskPriority(t, priority) : t)));\r\n  };\r\n\r\n  // Handle task search\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  // Filter tasks based on search query\r\n  const filteredTasks = tasks.filter((task) => task.title.toLowerCase().includes(searchQuery.toLowerCase()));\r\n\r\n  return (\r\n    <div className={theme === \"dark\" ? \"dark-mode\" : \"\"}>\r\n      <header>\r\n        <h1>CheckMate: An ADHD-Friendly To-Do List</h1>\r\n      </header>\r\n      <Header onToggleDarkMode={toggleDarkMode} onSearch={handleSearch} />\r\n      <TaskList\r\n        tasks={filteredTasks} // Pass filtered tasks based on search\r\n        filterStatus={filterStatus}\r\n        onToggleTask={handleToggleTask}\r\n        onSetPriority={handleSetPriority}\r\n      />\r\n      <Analytics tasks={tasks} />\r\n      <ThemeSelector onThemeChange={setTheme} />\r\n      <div className=\"task-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New Task\"\r\n          id=\"taskTitle\"\r\n          className=\"task-input-field\"\r\n        />\r\n        <select id=\"taskPriority\" className=\"priority-selector\">\r\n          <option value=\"high\">High</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"low\">Low</option>\r\n        </select>\r\n        <button\r\n          onClick={() => {\r\n            const title = document.getElementById(\"taskTitle\").value;\r\n            const priority = document.getElementById(\"taskPriority\").value;\r\n            if (title) addTask(title, priority);\r\n          }}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}