{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport Analytics from \"./components/Analytics\";\nimport ThemeSelector from \"./components/ThemeSelector\";\nimport Sidebar from \"./components/Sidebar\"; // Import Sidebar component\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\nimport \"./styles/App.css\";\nimport \"./styles/TaskItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // Start with an empty list of tasks\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [theme, setTheme] = useState(\"light\");\n  const [searchQuery, setSearchQuery] = useState(\"\"); // For search functionality\n  const [selectedTab, setSelectedTab] = useState(\"today\"); // Default tab\n\n  // Toggle between dark and light mode\n  const toggleDarkMode = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n    document.body.classList.toggle(\"dark-mode\");\n  };\n\n  // Add new task\n  const addTask = (title, priority) => {\n    const newTask = {\n      id: Date.now(),\n      // unique task id based on timestamp\n      title,\n      completed: false,\n      priority,\n      dueDate: \"\" // Default empty due date\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n\n  // Handle task completion toggle\n  const handleToggleTask = task => {\n    setTasks(tasks.map(t => t.id === task.id ? toggleTaskCompletion(t) : t));\n  };\n\n  // Set task priority\n  const handleSetPriority = (task, priority) => {\n    setTasks(tasks.map(t => t.id === task.id ? setTaskPriority(t, priority) : t));\n  };\n\n  // Handle task search\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n\n  // Filter tasks based on search query\n  const filteredTasks = tasks.filter(task => task.title.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Filter tasks based on selected tab (Today, Upcoming, Filtered)\n  const getTabFilteredTasks = () => {\n    switch (selectedTab) {\n      case \"today\":\n        return tasks.filter(task => task.dueDate === \"today\");\n      // Replace with actual logic\n      case \"upcoming\":\n        return tasks.filter(task => task.dueDate && task.dueDate > \"today\");\n      // Replace with actual logic\n      case \"filtered\":\n        return filteredTasks;\n      // Use filtered tasks for labeled tasks\n      default:\n        return tasks;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: theme === \"dark\" ? \"dark-mode\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        theme: theme,\n        onSelectTab: setSelectedTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          theme: theme,\n          onToggleDarkMode: toggleDarkMode,\n          onSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: getTabFilteredTasks() // Pass filtered tasks based on selected tab\n          ,\n          filterStatus: filterStatus,\n          onToggleTask: handleToggleTask,\n          onSetPriority: handleSetPriority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Analytics, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New Task\",\n        id: \"taskTitle\",\n        className: \"task-input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"taskPriority\",\n        className: \"priority-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const title = document.getElementById(\"taskTitle\").value;\n          const priority = document.getElementById(\"taskPriority\").value;\n          if (title) addTask(title, priority);\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8z3k7yfYR4TPgO3MNgmc5U/84mU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","ThemeSelector","Sidebar","toggleTaskCompletion","setTaskPriority","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filterStatus","setFilterStatus","theme","setTheme","searchQuery","setSearchQuery","selectedTab","setSelectedTab","toggleDarkMode","prevTheme","document","body","classList","toggle","addTask","title","priority","newTask","id","Date","now","completed","dueDate","prevTasks","handleToggleTask","task","map","t","handleSetPriority","handleSearch","query","filteredTasks","filter","toLowerCase","includes","getTabFilteredTasks","className","children","onSelectTab","fileName","_jsxFileName","lineNumber","columnNumber","onToggleDarkMode","onSearch","onToggleTask","onSetPriority","type","placeholder","value","onClick","getElementById","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport ThemeSelector from \"./components/ThemeSelector\";\r\nimport Sidebar from \"./components/Sidebar\"; // Import Sidebar component\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/TaskItem.css\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]); // Start with an empty list of tasks\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // For search functionality\r\n  const [selectedTab, setSelectedTab] = useState(\"today\"); // Default tab\r\n\r\n  // Toggle between dark and light mode\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n    document.body.classList.toggle(\"dark-mode\");\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = (title, priority) => {\r\n    const newTask = {\r\n      id: Date.now(), // unique task id based on timestamp\r\n      title,\r\n      completed: false,\r\n      priority,\r\n      dueDate: \"\", // Default empty due date\r\n    };\r\n    setTasks((prevTasks) => [...prevTasks, newTask]);\r\n  };\r\n\r\n  // Handle task completion toggle\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? toggleTaskCompletion(t) : t)));\r\n  };\r\n\r\n  // Set task priority\r\n  const handleSetPriority = (task, priority) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? setTaskPriority(t, priority) : t)));\r\n  };\r\n\r\n  // Handle task search\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  // Filter tasks based on search query\r\n  const filteredTasks = tasks.filter((task) => task.title.toLowerCase().includes(searchQuery.toLowerCase()));\r\n\r\n  // Filter tasks based on selected tab (Today, Upcoming, Filtered)\r\n  const getTabFilteredTasks = () => {\r\n    switch (selectedTab) {\r\n      case \"today\":\r\n        return tasks.filter((task) => task.dueDate === \"today\"); // Replace with actual logic\r\n      case \"upcoming\":\r\n        return tasks.filter((task) => task.dueDate && task.dueDate > \"today\"); // Replace with actual logic\r\n      case \"filtered\":\r\n        return filteredTasks; // Use filtered tasks for labeled tasks\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={theme === \"dark\" ? \"dark-mode\" : \"\"}>\r\n      <div className=\"app-container\">\r\n        <Sidebar theme={theme} onSelectTab={setSelectedTab} />\r\n        <div className=\"main-content\">\r\n          <Header theme={theme} onToggleDarkMode={toggleDarkMode} onSearch={handleSearch} />\r\n          <TaskList\r\n            tasks={getTabFilteredTasks()} // Pass filtered tasks based on selected tab\r\n            filterStatus={filterStatus}\r\n            onToggleTask={handleToggleTask}\r\n            onSetPriority={handleSetPriority}\r\n          />\r\n          <Analytics tasks={tasks} />\r\n        </div>\r\n      </div>\r\n      <div className=\"task-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New Task\"\r\n          id=\"taskTitle\"\r\n          className=\"task-input-field\"\r\n        />\r\n        <select id=\"taskPriority\" className=\"priority-selector\">\r\n          <option value=\"high\">High</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"low\">Low</option>\r\n        </select>\r\n        <button\r\n          onClick={() => {\r\n            const title = document.getElementById(\"taskTitle\").value;\r\n            const priority = document.getElementById(\"taskPriority\").value;\r\n            if (title) addTask(title, priority);\r\n          }}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}