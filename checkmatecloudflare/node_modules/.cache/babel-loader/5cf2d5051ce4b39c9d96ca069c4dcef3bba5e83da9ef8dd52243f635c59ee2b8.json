{"ast":null,"code":"// utils.js\n\n// Function to toggle completion of a task\nexport const toggleTaskCompletion = task => {\n  task.completed = !task.completed;\n  return task;\n};\n\n// Function to filter tasks by status (all, completed, pending)\nexport const filterTasks = (tasks, status) => {\n  if (status === \"completed\") {\n    return tasks.filter(task => task.completed);\n  }\n  if (status === \"pending\") {\n    return tasks.filter(task => !task.completed);\n  }\n  return tasks; // \"all\"\n};\n\n// Function to handle priority level of tasks\nexport const setTaskPriority = (task, priority) => {\n  task.priority = priority;\n  return task;\n};\n\n// Function to calculate the number of tasks completed (for analytics)\nexport const calculateTaskCompletion = tasks => {\n  const totalTasks = tasks.length;\n  const completedTasks = tasks.filter(task => task.completed).length;\n  return {\n    totalTasks,\n    completedTasks,\n    percentage: completedTasks / totalTasks * 100\n  };\n};\n\n// Function to format due date to a readable string\nexport const formatDueDate = dueDate => {\n  const date = new Date(dueDate);\n  return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n};","map":{"version":3,"names":["toggleTaskCompletion","task","completed","filterTasks","tasks","status","filter","setTaskPriority","priority","calculateTaskCompletion","totalTasks","length","completedTasks","percentage","formatDueDate","dueDate","date","Date","getMonth","getDate","getFullYear"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/utils.js"],"sourcesContent":["// utils.js\r\n\r\n// Function to toggle completion of a task\r\nexport const toggleTaskCompletion = (task) => {\r\n    task.completed = !task.completed;\r\n    return task;\r\n  };\r\n  \r\n  // Function to filter tasks by status (all, completed, pending)\r\n  export const filterTasks = (tasks, status) => {\r\n    if (status === \"completed\") {\r\n      return tasks.filter(task => task.completed);\r\n    }\r\n    if (status === \"pending\") {\r\n      return tasks.filter(task => !task.completed);\r\n    }\r\n    return tasks; // \"all\"\r\n  };\r\n  \r\n  // Function to handle priority level of tasks\r\n  export const setTaskPriority = (task, priority) => {\r\n    task.priority = priority;\r\n    return task;\r\n  };\r\n  \r\n  // Function to calculate the number of tasks completed (for analytics)\r\n  export const calculateTaskCompletion = (tasks) => {\r\n    const totalTasks = tasks.length;\r\n    const completedTasks = tasks.filter(task => task.completed).length;\r\n    return { totalTasks, completedTasks, percentage: (completedTasks / totalTasks) * 100 };\r\n  };\r\n  \r\n  // Function to format due date to a readable string\r\n  export const formatDueDate = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\r\n  };\r\n  "],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,oBAAoB,GAAIC,IAAI,IAAK;EAC1CA,IAAI,CAACC,SAAS,GAAG,CAACD,IAAI,CAACC,SAAS;EAChC,OAAOD,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAME,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,IAAIA,MAAM,KAAK,WAAW,EAAE;IAC1B,OAAOD,KAAK,CAACE,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC;EAC7C;EACA,IAAIG,MAAM,KAAK,SAAS,EAAE;IACxB,OAAOD,KAAK,CAACE,MAAM,CAACL,IAAI,IAAI,CAACA,IAAI,CAACC,SAAS,CAAC;EAC9C;EACA,OAAOE,KAAK,CAAC,CAAC;AAChB,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAGA,CAACN,IAAI,EAAEO,QAAQ,KAAK;EACjDP,IAAI,CAACO,QAAQ,GAAGA,QAAQ;EACxB,OAAOP,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMQ,uBAAuB,GAAIL,KAAK,IAAK;EAChD,MAAMM,UAAU,GAAGN,KAAK,CAACO,MAAM;EAC/B,MAAMC,cAAc,GAAGR,KAAK,CAACE,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAACS,MAAM;EAClE,OAAO;IAAED,UAAU;IAAEE,cAAc;IAAEC,UAAU,EAAGD,cAAc,GAAGF,UAAU,GAAI;EAAI,CAAC;AACxF,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAIC,OAAO,IAAK;EACxC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;EAC9B,OAAO,GAAGC,IAAI,CAACE,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAIF,IAAI,CAACG,OAAO,CAAC,CAAC,IAAIH,IAAI,CAACI,WAAW,CAAC,CAAC,EAAE;AACzE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}