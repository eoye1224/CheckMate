{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\n  const toggleTheme = () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    localStorage.setItem(\"theme\", newTheme);\n  };\n  useEffect(() => {\n    // Apply dark mode or light mode to the body element\n    document.body.className = theme;\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `theme-toggle-btn ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n        onClick: toggleTheme,\n        children: theme === \"dark\" ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `main-content ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: `task-input-field ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n          placeholder: \"Enter task...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: `priority-selector ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"low\",\n            children: \"Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"high\",\n            children: \"High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `add-task ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vu9F2wpR0BoGpAqLYPnUEv9Hug4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","theme","setTheme","localStorage","getItem","toggleTheme","newTheme","setItem","document","body","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\r\n\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\r\n    setTheme(newTheme);\r\n    localStorage.setItem(\"theme\", newTheme);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Apply dark mode or light mode to the body element\r\n    document.body.className = theme;\r\n  }, [theme]);\r\n\r\n  return (\r\n    <div className={`app-container ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n      <header className=\"App-header\">\r\n        <button className={`theme-toggle-btn ${theme === \"dark\" ? \"dark-mode\" : \"\"}`} onClick={toggleTheme}>\r\n          {theme === \"dark\" ? \"Switch to Light Mode\" : \"Switch to Dark Mode\"}\r\n        </button>\r\n      </header>\r\n\r\n      <main className={`main-content ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n        <div className=\"task-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            className={`task-input-field ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\r\n            placeholder=\"Enter task...\"\r\n          />\r\n          <select className={`priority-selector ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n            <option value=\"low\">Low</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"high\">High</option>\r\n          </select>\r\n          <button className={`add-task ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n            Add Task\r\n          </button>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC;EAE5E,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGL,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACI,QAAQ,CAAC;IAClBH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;EACzC,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd;IACAY,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGT,KAAK;EACjC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAKY,SAAS,EAAE,iBAAiBT,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAU,QAAA,gBACrEb,OAAA;MAAQY,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5Bb,OAAA;QAAQY,SAAS,EAAE,oBAAoBT,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,EAAE,EAAG;QAACW,OAAO,EAAEP,WAAY;QAAAM,QAAA,EAChGV,KAAK,KAAK,MAAM,GAAG,sBAAsB,GAAG;MAAqB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAETlB,OAAA;MAAMY,SAAS,EAAE,gBAAgBT,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,EAAE,EAAG;MAAAU,QAAA,eACrEb,OAAA;QAAKY,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCb,OAAA;UACEmB,IAAI,EAAC,MAAM;UACXP,SAAS,EAAE,oBAAoBT,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,EAAE,EAAG;UACrEiB,WAAW,EAAC;QAAe;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFlB,OAAA;UAAQY,SAAS,EAAE,qBAAqBT,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,EAAE,EAAG;UAAAU,QAAA,gBAC5Eb,OAAA;YAAQqB,KAAK,EAAC,KAAK;YAAAR,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAChClB,OAAA;YAAQqB,KAAK,EAAC,QAAQ;YAAAR,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtClB,OAAA;YAAQqB,KAAK,EAAC,MAAM;YAAAR,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACTlB,OAAA;UAAQY,SAAS,EAAE,YAAYT,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,EAAE,EAAG;UAAAU,QAAA,EAAC;QAEtE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAChB,EAAA,CAzCQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}