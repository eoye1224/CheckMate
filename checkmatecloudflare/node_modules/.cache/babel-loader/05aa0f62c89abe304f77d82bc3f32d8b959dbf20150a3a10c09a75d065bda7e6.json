{"ast":null,"code":"import React,{useState}from\"react\";import Header from\"./components/Header\";import TaskList from\"./components/TaskList\";import Analytics from\"./components/Analytics\";import ThemeSelector from\"./components/ThemeSelector\";import Sidebar from\"./components/Sidebar\";// Import Sidebar component\nimport{toggleTaskCompletion,setTaskPriority}from\"./utils\";import\"./styles/App.css\";import\"./styles/TaskItem.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tasks,setTasks]=useState([]);// Start with an empty list of tasks\nconst[filterStatus,setFilterStatus]=useState(\"all\");const[theme,setTheme]=useState(\"light\");const[searchQuery,setSearchQuery]=useState(\"\");// For search functionality\nconst[selectedTab,setSelectedTab]=useState(\"today\");// Default tab\n// Toggle between dark and light mode\nconst toggleDarkMode=()=>{setTheme(prevTheme=>prevTheme===\"light\"?\"dark\":\"light\");};// Add new task\nconst addTask=(title,priority)=>{const newTask={id:Date.now(),// unique task id based on timestamp\ntitle,completed:false,priority,dueDate:\"\"// Default empty due date\n};setTasks(prevTasks=>[...prevTasks,newTask]);};// Handle task completion toggle\nconst handleToggleTask=task=>{setTasks(tasks.map(t=>t.id===task.id?toggleTaskCompletion(t):t));};// Set task priority\nconst handleSetPriority=(task,priority)=>{setTasks(tasks.map(t=>t.id===task.id?setTaskPriority(t,priority):t));};// Handle task search\nconst handleSearch=query=>{setSearchQuery(query);};// Filter tasks based on search query\nconst filteredTasks=tasks.filter(task=>task.title.toLowerCase().includes(searchQuery.toLowerCase()));// Filter tasks based on selected tab (Today, Upcoming, Filtered)\nconst getTabFilteredTasks=()=>{switch(selectedTab){case\"today\":return tasks.filter(task=>task.dueDate===\"today\");// Replace with actual logic\ncase\"upcoming\":return tasks.filter(task=>task.dueDate&&task.dueDate>\"today\");// Replace with actual logic\ncase\"filtered\":return filteredTasks;// Use filtered tasks for labeled tasks\ndefault:return tasks;}};return/*#__PURE__*/_jsxs(\"div\",{className:theme===\"dark\"?\"dark-mode\":\"\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(Sidebar,{onSelectTab:setSelectedTab}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(Header,{onToggleDarkMode:toggleDarkMode,onSearch:handleSearch}),/*#__PURE__*/_jsx(TaskList,{tasks:getTabFilteredTasks()// Pass filtered tasks based on selected tab\n,filterStatus:filterStatus,onToggleTask:handleToggleTask,onSetPriority:handleSetPriority}),/*#__PURE__*/_jsx(Analytics,{tasks:tasks})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New Task\",id:\"taskTitle\",className:\"task-input-field\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"taskPriority\",className:\"priority-selector\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"high\",children:\"High\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"low\",children:\"Low\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const title=document.getElementById(\"taskTitle\").value;const priority=document.getElementById(\"taskPriority\").value;if(title)addTask(title,priority);},children:\"Add Task\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","ThemeSelector","Sidebar","toggleTaskCompletion","setTaskPriority","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","filterStatus","setFilterStatus","theme","setTheme","searchQuery","setSearchQuery","selectedTab","setSelectedTab","toggleDarkMode","prevTheme","addTask","title","priority","newTask","id","Date","now","completed","dueDate","prevTasks","handleToggleTask","task","map","t","handleSetPriority","handleSearch","query","filteredTasks","filter","toLowerCase","includes","getTabFilteredTasks","className","children","onSelectTab","onToggleDarkMode","onSearch","onToggleTask","onSetPriority","type","placeholder","value","onClick","document","getElementById"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport ThemeSelector from \"./components/ThemeSelector\";\r\nimport Sidebar from \"./components/Sidebar\"; // Import Sidebar component\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/TaskItem.css\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]); // Start with an empty list of tasks\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // For search functionality\r\n  const [selectedTab, setSelectedTab] = useState(\"today\"); // Default tab\r\n\r\n  // Toggle between dark and light mode\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  // Add new task\r\n  const addTask = (title, priority) => {\r\n    const newTask = {\r\n      id: Date.now(), // unique task id based on timestamp\r\n      title,\r\n      completed: false,\r\n      priority,\r\n      dueDate: \"\", // Default empty due date\r\n    };\r\n    setTasks((prevTasks) => [...prevTasks, newTask]);\r\n  };\r\n\r\n  // Handle task completion toggle\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? toggleTaskCompletion(t) : t)));\r\n  };\r\n\r\n  // Set task priority\r\n  const handleSetPriority = (task, priority) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? setTaskPriority(t, priority) : t)));\r\n  };\r\n\r\n  // Handle task search\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  // Filter tasks based on search query\r\n  const filteredTasks = tasks.filter((task) => task.title.toLowerCase().includes(searchQuery.toLowerCase()));\r\n\r\n  // Filter tasks based on selected tab (Today, Upcoming, Filtered)\r\n  const getTabFilteredTasks = () => {\r\n    switch (selectedTab) {\r\n      case \"today\":\r\n        return tasks.filter((task) => task.dueDate === \"today\"); // Replace with actual logic\r\n      case \"upcoming\":\r\n        return tasks.filter((task) => task.dueDate && task.dueDate > \"today\"); // Replace with actual logic\r\n      case \"filtered\":\r\n        return filteredTasks; // Use filtered tasks for labeled tasks\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={theme === \"dark\" ? \"dark-mode\" : \"\"}>\r\n      <div className=\"app-container\">\r\n        <Sidebar onSelectTab={setSelectedTab} />\r\n        <div className=\"main-content\">\r\n          <Header onToggleDarkMode={toggleDarkMode} onSearch={handleSearch} />\r\n          <TaskList\r\n            tasks={getTabFilteredTasks()} // Pass filtered tasks based on selected tab\r\n            filterStatus={filterStatus}\r\n            onToggleTask={handleToggleTask}\r\n            onSetPriority={handleSetPriority}\r\n          />\r\n          <Analytics tasks={tasks} />\r\n        </div>\r\n      </div>\r\n      <div className=\"task-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"New Task\"\r\n          id=\"taskTitle\"\r\n          className=\"task-input-field\"\r\n        />\r\n        <select id=\"taskPriority\" className=\"priority-selector\">\r\n          <option value=\"high\">High</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"low\">Low</option>\r\n        </select>\r\n        <button\r\n          onClick={() => {\r\n            const title = document.getElementById(\"taskTitle\").value;\r\n            const priority = document.getElementById(\"taskPriority\").value;\r\n            if (title) addTask(title, priority);\r\n          }}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}