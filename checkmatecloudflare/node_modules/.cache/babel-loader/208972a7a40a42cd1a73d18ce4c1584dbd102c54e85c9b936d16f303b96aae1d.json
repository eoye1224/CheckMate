{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport Analytics from \"./components/Analytics\";\nimport Sidebar from \"./components/Sidebar\";\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\nimport \"./styles/App.css\";\nimport \"./styles/TaskItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"Welcome to CheckMate! 🎉 Start by completing this task to begin your productivity journey.\",\n    completed: false,\n    priority: \"medium\",\n    dueDate: \"\"\n  }, {\n    id: 2,\n    title: \"Start small: Add just 1 task that's been on your mind 💆\",\n    completed: false,\n    priority: \"low\",\n    dueDate: \"\"\n  }, {\n    id: 3,\n    title: \"Do a weekly review of my tasks and goals 🔄\",\n    completed: false,\n    priority: \"high\",\n    dueDate: \"\"\n  }, {\n    id: 4,\n    title: \"Download CheckMate on your phone for easy access 📱\",\n    completed: false,\n    priority: \"low\",\n    dueDate: \"\"\n  }]);\n  const [theme, setTheme] = useState(\"light\");\n  const [taskInput, setTaskInput] = useState(\"\");\n  const [taskPriority, setTaskPriority] = useState(\"medium\");\n  const toggleDarkMode = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  };\n  const toggleTaskCompletion = task => {\n    return {\n      ...task,\n      completed: !task.completed\n    };\n  };\n  const addTask = (title, priority) => {\n    if (!title.trim()) return;\n    const newTask = {\n      id: Date.now(),\n      title,\n      completed: false,\n      priority: priority || \"medium\"\n    };\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  const handleToggleTask = task => {\n    setTasks(tasks.map(t => t.id === task.id ? toggleTaskCompletion(t) : t));\n  };\n  const getTabFilteredTasks = () => {\n    return tasks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      theme: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onToggleDarkMode: toggleDarkMode,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: getTabFilteredTasks(),\n          onToggleTask: handleToggleTask,\n          theme: theme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New Task\",\n            value: taskInput,\n            onChange: e => setTaskInput(e.target.value),\n            className: `task-input-field ${theme === \"dark\" ? \"dark-mode\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: taskPriority,\n            onChange: e => setTaskPriority(e.target.value),\n            className: `priority-selector ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (taskInput.trim()) {\n                addTask(taskInput, taskPriority);\n                setTaskInput(\"\"); // Clear input field after adding task\n              }\n            },\n            className: `add-task-btn ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Analytics, {\n        tasks: tasks,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZvzG1VxkICu/GFJWCPbVq44WEt0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","Sidebar","toggleTaskCompletion","setTaskPriority","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","title","completed","priority","dueDate","theme","setTheme","taskInput","setTaskInput","taskPriority","toggleDarkMode","prevTheme","task","addTask","trim","newTask","Date","now","prevTasks","handleToggleTask","map","t","getTabFilteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onToggleDarkMode","onToggleTask","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/TaskItem.css\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"Welcome to CheckMate! 🎉 Start by completing this task to begin your productivity journey.\",\r\n      completed: false,\r\n      priority: \"medium\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Start small: Add just 1 task that's been on your mind 💆\",\r\n      completed: false,\r\n      priority: \"low\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Do a weekly review of my tasks and goals 🔄\",\r\n      completed: false,\r\n      priority: \"high\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Download CheckMate on your phone for easy access 📱\",\r\n      completed: false,\r\n      priority: \"low\",\r\n      dueDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [taskInput, setTaskInput] = useState(\"\");\r\n  const [taskPriority, setTaskPriority] = useState(\"medium\");\r\n\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => prevTheme === \"light\" ? \"dark\" : \"light\");\r\n  };\r\n\r\n  const toggleTaskCompletion = (task) => {\r\n    return { ...task, completed: !task.completed };\r\n  };\r\n\r\n  const addTask = (title, priority) => {\r\n    if (!title.trim()) return;\r\n\r\n    const newTask = {\r\n      id: Date.now(),\r\n      title,\r\n      completed: false,\r\n      priority: priority || \"medium\",\r\n    };\r\n\r\n    setTasks((prevTasks) => [...prevTasks, newTask]);\r\n  };\r\n\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? toggleTaskCompletion(t) : t)));\r\n  };\r\n\r\n  const getTabFilteredTasks = () => {\r\n    return tasks;\r\n  };\r\n\r\n  return (\r\n    <div className={`app-container ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n      <Sidebar theme={theme} />\r\n      <div className=\"main-content\">\r\n        <Header onToggleDarkMode={toggleDarkMode} theme={theme} />\r\n        <div className=\"task-container\">\r\n          <TaskList\r\n            tasks={getTabFilteredTasks()}\r\n            onToggleTask={handleToggleTask}\r\n            theme={theme}\r\n          />\r\n          <div className=\"task-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"New Task\"\r\n              value={taskInput}\r\n              onChange={(e) => setTaskInput(e.target.value)}\r\n              className={`task-input-field ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\r\n            />\r\n            <select\r\n              value={taskPriority}\r\n              onChange={(e) => setTaskPriority(e.target.value)}\r\n              className={`priority-selector ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\r\n            >\r\n              <option value=\"high\">High</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"low\">Low</option>\r\n            </select>\r\n            <button\r\n              onClick={() => {\r\n                if (taskInput.trim()) {\r\n                  addTask(taskInput, taskPriority);\r\n                  setTaskInput(\"\"); // Clear input field after adding task\r\n                }\r\n              }}\r\n              className={`add-task-btn ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\r\n            >\r\n              Add Task\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <Analytics tasks={tasks} theme={theme} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}