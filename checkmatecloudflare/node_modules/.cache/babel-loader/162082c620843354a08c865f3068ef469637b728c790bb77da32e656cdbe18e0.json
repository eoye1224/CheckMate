{"ast":null,"code":"import React,{useState}from\"react\";import Header from\"./components/Header\";import TaskList from\"./components/TaskList\";import Analytics from\"./components/Analytics\";import ThemeSelector from\"./components/ThemeSelector\";import{toggleTaskCompletion,setTaskPriority}from\"./utils\";// Make sure utils.js has these functions\nimport\"./styles/App.css\";// Ensure the path is correct\nimport\"./styles/TaskItem.css\";// Ensure the path is correct\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tasks,setTasks]=useState([{id:1,title:\"Task 1\",completed:false,priority:\"medium\",dueDate:\"2025-01-30\"},{id:2,title:\"Task 2\",completed:true,priority:\"high\",dueDate:\"2025-01-25\"}// Add more tasks as needed\n]);const[filterStatus,setFilterStatus]=useState(\"all\");const[theme,setTheme]=useState(\"light\");const[searchQuery,setSearchQuery]=useState(\"\");// Added state for search query\nconst toggleDarkMode=()=>{setTheme(prevTheme=>prevTheme===\"light\"?\"dark\":\"light\");};const handleSearch=query=>{setSearchQuery(query);// Set the search query state\n};const handleToggleTask=task=>{setTasks(tasks.map(t=>t.id===task.id?toggleTaskCompletion(t):t));};const handleSetPriority=(task,priority)=>{setTasks(tasks.map(t=>t.id===task.id?setTaskPriority(t,priority):t));};// Filter tasks based on search query and status filter\nconst filteredTasks=tasks.filter(task=>{const matchesSearch=task.title.toLowerCase().includes(searchQuery.toLowerCase());const matchesStatus=filterStatus===\"all\"||filterStatus===\"completed\"&&task.completed||filterStatus===\"pending\"&&!task.completed;return matchesSearch&&matchesStatus;});return/*#__PURE__*/_jsxs(\"div\",{className:theme===\"dark\"?\"dark-mode\":\"\",children:[/*#__PURE__*/_jsx(Header,{onToggleDarkMode:toggleDarkMode,onSearch:handleSearch}),/*#__PURE__*/_jsx(TaskList,{tasks:filteredTasks// Pass the filtered tasks\n,filterStatus:filterStatus,onToggleTask:handleToggleTask,onSetPriority:handleSetPriority}),/*#__PURE__*/_jsx(Analytics,{tasks:tasks}),/*#__PURE__*/_jsx(ThemeSelector,{onThemeChange:setTheme})]});};export default App;","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","ThemeSelector","toggleTaskCompletion","setTaskPriority","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","id","title","completed","priority","dueDate","filterStatus","setFilterStatus","theme","setTheme","searchQuery","setSearchQuery","toggleDarkMode","prevTheme","handleSearch","query","handleToggleTask","task","map","t","handleSetPriority","filteredTasks","filter","matchesSearch","toLowerCase","includes","matchesStatus","className","children","onToggleDarkMode","onSearch","onToggleTask","onSetPriority","onThemeChange"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport ThemeSelector from \"./components/ThemeSelector\";\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";  // Make sure utils.js has these functions\r\nimport \"./styles/App.css\";  // Ensure the path is correct\r\nimport \"./styles/TaskItem.css\";  // Ensure the path is correct\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    { id: 1, title: \"Task 1\", completed: false, priority: \"medium\", dueDate: \"2025-01-30\" },\r\n    { id: 2, title: \"Task 2\", completed: true, priority: \"high\", dueDate: \"2025-01-25\" },\r\n    // Add more tasks as needed\r\n  ]);\r\n\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");  // Added state for search query\r\n\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);  // Set the search query state\r\n  };\r\n\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map(t => t.id === task.id ? toggleTaskCompletion(t) : t));\r\n  };\r\n\r\n  const handleSetPriority = (task, priority) => {\r\n    setTasks(tasks.map(t => t.id === task.id ? setTaskPriority(t, priority) : t));\r\n  };\r\n\r\n  // Filter tasks based on search query and status filter\r\n  const filteredTasks = tasks.filter((task) => {\r\n    const matchesSearch = task.title.toLowerCase().includes(searchQuery.toLowerCase());\r\n    const matchesStatus =\r\n      filterStatus === \"all\" ||\r\n      (filterStatus === \"completed\" && task.completed) ||\r\n      (filterStatus === \"pending\" && !task.completed);\r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n  return (\r\n    <div className={theme === \"dark\" ? \"dark-mode\" : \"\"}>\r\n      <Header onToggleDarkMode={toggleDarkMode} onSearch={handleSearch} />\r\n      <TaskList\r\n        tasks={filteredTasks}  // Pass the filtered tasks\r\n        filterStatus={filterStatus}\r\n        onToggleTask={handleToggleTask}\r\n        onSetPriority={handleSetPriority}\r\n      />\r\n      <Analytics tasks={tasks} />\r\n      <ThemeSelector onThemeChange={setTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}