{"ast":null,"code":"import _objectSpread from\"C:/Users/super/checkmate/checkmatecloudflare/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import Header from\"./components/Header\";import TaskList from\"./components/TaskList\";import Analytics from\"./components/Analytics\";import Sidebar from\"./components/Sidebar\";import{toggleTaskCompletion,setTaskPriority}from\"./utils\";import\"./styles/App.css\";import\"./styles/TaskItem.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tasks,setTasks]=useState([{id:1,title:\"Welcome to CheckMate! ðŸŽ‰ Start by completing this task to begin your productivity journey.\",completed:false,priority:\"medium\",dueDate:\"\"},{id:2,title:\"Start small: Add just 1 task that's been on your mind ðŸ’†\",completed:false,priority:\"low\",dueDate:\"\"},{id:3,title:\"Do a weekly review of my tasks and goals ðŸ”„\",completed:false,priority:\"high\",dueDate:\"\"},{id:4,title:\"Download CheckMate on your phone for easy access ðŸ“±\",completed:false,priority:\"low\",dueDate:\"\"}]);const[filterStatus,setFilterStatus]=useState(\"all\");const[theme,setTheme]=useState(\"light\");const[selectedTab,setSelectedTab]=useState(\"all\");const[taskInput,setTaskInput]=useState(\"\");const[taskPriority,setTaskPriority]=useState(\"medium\");const[isSidebarVisible,setSidebarVisible]=useState(true);const toggleDarkMode=()=>{setTheme(prevTheme=>prevTheme===\"light\"?\"dark\":\"light\");};const toggleSidebar=()=>{setSidebarVisible(prevState=>!prevState);};const toggleTaskCompletion=task=>{return _objectSpread(_objectSpread({},task),{},{completed:!task.completed});};const addTask=(title,priority)=>{if(!title.trim())return;const newTask={id:Date.now(),title,completed:false,priority:priority||\"medium\"};setTasks(prevTasks=>{const updatedTasks=[...prevTasks,newTask];console.log(\"Tasks after addition:\",updatedTasks);return updatedTasks;});};const handleToggleTask=task=>{setTasks(tasks.map(t=>t.id===task.id?toggleTaskCompletion(t):t));};const handleSetPriority=(task,priority)=>{setTasks(tasks.map(t=>t.id===task.id?_objectSpread(_objectSpread({},t),{},{priority:priority}):t));};const getTabFilteredTasks=()=>{switch(selectedTab){case\"today\":return tasks.filter(task=>task.dueDate===\"today\");case\"upcoming\":return tasks.filter(task=>task.dueDate&&task.dueDate>\"today\");default:return tasks;}};const getCompletionProgress=()=>{const completedTasks=tasks.filter(task=>task.completed).length;return Math.round(completedTasks/tasks.length*100);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container \".concat(theme===\"dark\"?\"dark-mode\":\"\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar \".concat(!isSidebarVisible?\"hidden\":\"\"),children:[/*#__PURE__*/_jsx(\"button\",{className:\"sidebar-toggle\",onClick:toggleSidebar,children:\"\\u2630\"}),/*#__PURE__*/_jsx(Sidebar,{onSelectTab:setSelectedTab,theme:theme})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(Header,{onToggleDarkMode:toggleDarkMode,theme:theme}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-container\",children:[/*#__PURE__*/_jsx(TaskList,{tasks:getTabFilteredTasks(),filterStatus:filterStatus,onToggleTask:handleToggleTask,onSetPriority:handleSetPriority,theme:theme}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"New Task\",value:taskInput,onChange:e=>setTaskInput(e.target.value),className:\"task-input-field \".concat(theme===\"dark\"?\"dark-mode\":\"\")}),/*#__PURE__*/_jsxs(\"select\",{value:taskPriority,onChange:e=>setTaskPriority(e.target.value),className:\"priority-selector \".concat(theme===\"dark\"?\"dark-mode\":\"\"),children:[/*#__PURE__*/_jsx(\"option\",{value:\"high\",children:\"High\"}),/*#__PURE__*/_jsx(\"option\",{value:\"medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"low\",children:\"Low\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{if(taskInput.trim()){addTask(taskInput,taskPriority);setTaskInput(\"\");}},className:\"add-task-btn \".concat(theme===\"dark\"?\"dark-mode\":\"\"),children:\"Add Task\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",style:{width:\"\".concat(getCompletionProgress(),\"%\")}}),/*#__PURE__*/_jsxs(\"p\",{children:[getCompletionProgress(),\"% Completed\"]})]})]}),/*#__PURE__*/_jsx(Analytics,{tasks:tasks,theme:theme})]})]});};export default App;","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","Sidebar","toggleTaskCompletion","setTaskPriority","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","id","title","completed","priority","dueDate","filterStatus","setFilterStatus","theme","setTheme","selectedTab","setSelectedTab","taskInput","setTaskInput","taskPriority","isSidebarVisible","setSidebarVisible","toggleDarkMode","prevTheme","toggleSidebar","prevState","task","_objectSpread","addTask","trim","newTask","Date","now","prevTasks","updatedTasks","console","log","handleToggleTask","map","t","handleSetPriority","getTabFilteredTasks","filter","getCompletionProgress","completedTasks","length","Math","round","className","concat","children","onClick","onSelectTab","onToggleDarkMode","onToggleTask","onSetPriority","type","placeholder","value","onChange","e","target","style","width"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";\r\nimport \"./styles/App.css\";\r\nimport \"./styles/TaskItem.css\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 1,\r\n      title: \"Welcome to CheckMate! ðŸŽ‰ Start by completing this task to begin your productivity journey.\",\r\n      completed: false,\r\n      priority: \"medium\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Start small: Add just 1 task that's been on your mind ðŸ’†\",\r\n      completed: false,\r\n      priority: \"low\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Do a weekly review of my tasks and goals ðŸ”„\",\r\n      completed: false,\r\n      priority: \"high\",\r\n      dueDate: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Download CheckMate on your phone for easy access ðŸ“±\",\r\n      completed: false,\r\n      priority: \"low\",\r\n      dueDate: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [selectedTab, setSelectedTab] = useState(\"all\");\r\n  const [taskInput, setTaskInput] = useState(\"\");\r\n  const [taskPriority, setTaskPriority] = useState(\"medium\");\r\n  const [isSidebarVisible, setSidebarVisible] = useState(true);\r\n\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarVisible((prevState) => !prevState);\r\n  };\r\n\r\n  const toggleTaskCompletion = (task) => {\r\n    return { ...task, completed: !task.completed };\r\n  };\r\n\r\n  const addTask = (title, priority) => {\r\n    if (!title.trim()) return;\r\n\r\n    const newTask = {\r\n      id: Date.now(),\r\n      title,\r\n      completed: false,\r\n      priority: priority || \"medium\",\r\n    };\r\n\r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = [...prevTasks, newTask];\r\n      console.log(\"Tasks after addition:\", updatedTasks);\r\n      return updatedTasks;\r\n    });\r\n  };\r\n\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map((t) => (t.id === task.id ? toggleTaskCompletion(t) : t)));\r\n  };\r\n\r\n  const handleSetPriority = (task, priority) => {\r\n    setTasks(tasks.map((t) => \r\n      t.id === task.id ? { ...t, priority: priority } : t\r\n    ));\r\n  };\r\n\r\n  const getTabFilteredTasks = () => {\r\n    switch (selectedTab) {\r\n      case \"today\":\r\n        return tasks.filter((task) => task.dueDate === \"today\");\r\n      case \"upcoming\":\r\n        return tasks.filter((task) => task.dueDate && task.dueDate > \"today\");\r\n      default:\r\n        return tasks;\r\n    }\r\n  };\r\n\r\n  const getCompletionProgress = () => {\r\n    const completedTasks = tasks.filter((task) => task.completed).length;\r\n    return Math.round((completedTasks / tasks.length) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className={`app-container ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n      <div className={`sidebar ${!isSidebarVisible ? \"hidden\" : \"\"}`}>\r\n        <button className=\"sidebar-toggle\" onClick={toggleSidebar}>â˜°</button>\r\n        <Sidebar onSelectTab={setSelectedTab} theme={theme} />\r\n      </div>\r\n\r\n      <div className=\"main-content\">\r\n        <Header onToggleDarkMode={toggleDarkMode} theme={theme} />\r\n        <div className=\"task-container\">\r\n          <TaskList\r\n            tasks={getTabFilteredTasks()}\r\n            filterStatus={filterStatus}\r\n            onToggleTask={handleToggleTask}\r\n            onSetPriority={handleSetPriority}\r\n            theme={theme}\r\n          />\r\n          <div className=\"task-input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"New Task\"\r\n              value={taskInput}\r\n              onChange={(e) => setTaskInput(e.target.value)}\r\n              className={`task-input-field ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\r\n            />\r\n            <select\r\n              value={taskPriority}\r\n              onChange={(e) => setTaskPriority(e.target.value)}\r\n              className={`priority-selector ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\r\n            >\r\n              <option value=\"high\">High</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"low\">Low</option>\r\n            </select>\r\n            <button\r\n              onClick={() => {\r\n                if (taskInput.trim()) {\r\n                  addTask(taskInput, taskPriority);\r\n                  setTaskInput(\"\");\r\n                }\r\n              }}\r\n              className={`add-task-btn ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}\r\n            >\r\n              Add Task\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-bar\" style={{ width: `${getCompletionProgress()}%` }} />\r\n            <p>{getCompletionProgress()}% Completed</p>\r\n          </div>\r\n        </div>\r\n        <Analytics tasks={tasks} theme={theme} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}