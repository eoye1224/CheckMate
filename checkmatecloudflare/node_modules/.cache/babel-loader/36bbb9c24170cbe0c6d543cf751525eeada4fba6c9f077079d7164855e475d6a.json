{"ast":null,"code":"import _objectSpread from\"C:/Users/super/checkmate/checkmatecloudflare/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// utils.js\n// Function to toggle completion of a task\nexport const toggleTaskCompletion=task=>{return _objectSpread(_objectSpread({},task),{},{completed:!task.completed});};// Function to filter tasks by status (all, completed, pending)\nexport const filterTasks=(tasks,status)=>{if(status===\"completed\"){return tasks.filter(task=>task.completed);}if(status===\"pending\"){return tasks.filter(task=>!task.completed);}return tasks;// \"all\"\n};export const setTaskPriority=(task,priority)=>{return _objectSpread(_objectSpread({},task),{},{priority:priority});};// Function to calculate the number of tasks completed (for analytics)\nexport const calculateTaskCompletion=tasks=>{const totalTasks=tasks.length;const completedTasks=tasks.filter(task=>task.completed).length;return{totalTasks,completedTasks,percentage:completedTasks/totalTasks*100};};// Function to format due date to a readable string\nexport const formatDueDate=dueDate=>{const date=new Date(dueDate);return\"\".concat(date.getMonth()+1,\"/\").concat(date.getDate(),\"/\").concat(date.getFullYear());};","map":{"version":3,"names":["toggleTaskCompletion","task","_objectSpread","completed","filterTasks","tasks","status","filter","setTaskPriority","priority","calculateTaskCompletion","totalTasks","length","completedTasks","percentage","formatDueDate","dueDate","date","Date","concat","getMonth","getDate","getFullYear"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/utils.js"],"sourcesContent":["// utils.js\r\n\r\n// Function to toggle completion of a task\r\nexport const toggleTaskCompletion = (task) => {\r\n    return { ...task, completed: !task.completed };\r\n};\r\n  \r\n  // Function to filter tasks by status (all, completed, pending)\r\nexport const filterTasks = (tasks, status) => {\r\n    if (status === \"completed\") {\r\n        return tasks.filter(task => task.completed);\r\n    }\r\n    if (status === \"pending\") {\r\n      return tasks.filter(task => !task.completed);\r\n    }\r\n    return tasks; // \"all\"\r\n};\r\n  \r\n\r\n  \r\nexport const setTaskPriority = (task, priority) => {\r\n    return { ...task, priority: priority };\r\n};\r\n  \r\n  \r\n// Function to calculate the number of tasks completed (for analytics)\r\nexport const calculateTaskCompletion = (tasks) => {\r\n    const totalTasks = tasks.length;\r\n    const completedTasks = tasks.filter(task => task.completed).length;\r\n    return { totalTasks, completedTasks, percentage: (completedTasks / totalTasks) * 100 };\r\n};\r\n  \r\n// Function to format due date to a readable string\r\nexport const formatDueDate = (dueDate) => {\r\n    const date = new Date(dueDate);\r\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\r\n};\r\n  "],"mappings":"iIAAA;AAEA;AACA,MAAO,MAAM,CAAAA,oBAAoB,CAAIC,IAAI,EAAK,CAC1C,OAAAC,aAAA,CAAAA,aAAA,IAAYD,IAAI,MAAEE,SAAS,CAAE,CAACF,IAAI,CAACE,SAAS,GAChD,CAAC,CAEC;AACF,MAAO,MAAM,CAAAC,WAAW,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC1C,GAAIA,MAAM,GAAK,WAAW,CAAE,CACxB,MAAO,CAAAD,KAAK,CAACE,MAAM,CAACN,IAAI,EAAIA,IAAI,CAACE,SAAS,CAAC,CAC/C,CACA,GAAIG,MAAM,GAAK,SAAS,CAAE,CACxB,MAAO,CAAAD,KAAK,CAACE,MAAM,CAACN,IAAI,EAAI,CAACA,IAAI,CAACE,SAAS,CAAC,CAC9C,CACA,MAAO,CAAAE,KAAK,CAAE;AAClB,CAAC,CAID,MAAO,MAAM,CAAAG,eAAe,CAAGA,CAACP,IAAI,CAAEQ,QAAQ,GAAK,CAC/C,OAAAP,aAAA,CAAAA,aAAA,IAAYD,IAAI,MAAEQ,QAAQ,CAAEA,QAAQ,GACxC,CAAC,CAGD;AACA,MAAO,MAAM,CAAAC,uBAAuB,CAAIL,KAAK,EAAK,CAC9C,KAAM,CAAAM,UAAU,CAAGN,KAAK,CAACO,MAAM,CAC/B,KAAM,CAAAC,cAAc,CAAGR,KAAK,CAACE,MAAM,CAACN,IAAI,EAAIA,IAAI,CAACE,SAAS,CAAC,CAACS,MAAM,CAClE,MAAO,CAAED,UAAU,CAAEE,cAAc,CAAEC,UAAU,CAAGD,cAAc,CAAGF,UAAU,CAAI,GAAI,CAAC,CAC1F,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,aAAa,CAAIC,OAAO,EAAK,CACtC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,OAAO,CAAC,CAC9B,SAAAG,MAAA,CAAUF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAG,CAAC,MAAAD,MAAA,CAAIF,IAAI,CAACI,OAAO,CAAC,CAAC,MAAAF,MAAA,CAAIF,IAAI,CAACK,WAAW,CAAC,CAAC,EACzE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}