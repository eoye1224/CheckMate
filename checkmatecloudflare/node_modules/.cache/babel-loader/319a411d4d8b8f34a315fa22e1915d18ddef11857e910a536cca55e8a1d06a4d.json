{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Import useState\nimport '../styles/TaskItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onToggleTask,\n  onSetPriority\n}) => {\n  _s();\n  console.log(\"Task received in TaskItem:\", task); // Log the task prop\n  const [showPriority, setShowPriority] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: () => onToggleTask(task)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: task.completed ? \"completed\" : \"\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), showPriority ? /*#__PURE__*/_jsxDEV(\"select\", {\n      value: task.priority,\n      onChange: e => onSetPriority(task, e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"high\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowPriority(true),\n      children: \"Set Priority\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n_s(TaskItem, \"/icM9Y97g4Jm06FUYJ/4uX3Zy60=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskItem","task","onToggleTask","onSetPriority","_s","console","log","showPriority","setShowPriority","className","children","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","value","priority","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from \"react\"; // Import useState\r\nimport '../styles/TaskItem.css';\r\n\r\nconst TaskItem = ({ task, onToggleTask, onSetPriority }) => {\r\n    console.log(\"Task received in TaskItem:\", task); // Log the task prop\r\n    const [showPriority, setShowPriority] = useState(false);\r\n\r\n    return (\r\n      <li className=\"task-item\">\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={task.completed} \r\n          onChange={() => onToggleTask(task)} \r\n        />\r\n        <span className={task.completed ? \"completed\" : \"\"}>{task.title}</span>\r\n\r\n        {showPriority ? (\r\n          <select \r\n            value={task.priority} \r\n            onChange={(e) => onSetPriority(task, e.target.value)}\r\n          >\r\n            <option value=\"high\">High</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"low\">Low</option>\r\n          </select>\r\n        ) : (\r\n          <button onClick={() => setShowPriority(true)}>Set Priority</button>\r\n        )}\r\n      </li>\r\n    );\r\n};\r\n\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxDC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEL,IAAI,CAAC,CAAC,CAAC;EACjD,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvD,oBACEE,OAAA;IAAIU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACvBX,OAAA;MACEY,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEX,IAAI,CAACY,SAAU;MACxBC,QAAQ,EAAEA,CAAA,KAAMZ,YAAY,CAACD,IAAI;IAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFnB,OAAA;MAAMU,SAAS,EAAER,IAAI,CAACY,SAAS,GAAG,WAAW,GAAG,EAAG;MAAAH,QAAA,EAAET,IAAI,CAACkB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAEtEX,YAAY,gBACXR,OAAA;MACEqB,KAAK,EAAEnB,IAAI,CAACoB,QAAS;MACrBP,QAAQ,EAAGQ,CAAC,IAAKnB,aAAa,CAACF,IAAI,EAAEqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAV,QAAA,gBAErDX,OAAA;QAAQqB,KAAK,EAAC,MAAM;QAAAV,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClCnB,OAAA;QAAQqB,KAAK,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCnB,OAAA;QAAQqB,KAAK,EAAC,KAAK;QAAAV,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAETnB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAAC,IAAI,CAAE;MAAAE,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEX,CAAC;AAACd,EAAA,CA3BIJ,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}