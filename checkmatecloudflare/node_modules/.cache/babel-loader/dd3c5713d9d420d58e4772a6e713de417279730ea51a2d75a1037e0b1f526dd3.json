{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/TaskItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onToggleTask,\n  onSetPriority,\n  theme\n}) => {\n  _s();\n  const [showPriority, setShowPriority] = useState(false);\n  if (!task) return null; // Ensure task exists before rendering\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `task-item ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: () => onToggleTask(task)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: task.completed ? \"completed\" : \"\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), showPriority ? /*#__PURE__*/_jsxDEV(\"select\", {\n      value: task.priority,\n      onChange: e => onSetPriority(task, e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"high\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowPriority(true),\n      children: \"Set Priority\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"/icM9Y97g4Jm06FUYJ/4uX3Zy60=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskItem","task","onToggleTask","onSetPriority","theme","_s","showPriority","setShowPriority","className","children","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","value","priority","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/TaskItem.css\";\r\n\r\nconst TaskItem = ({ task, onToggleTask, onSetPriority, theme }) => {\r\n  const [showPriority, setShowPriority] = useState(false);\r\n\r\n  if (!task) return null; // Ensure task exists before rendering\r\n\r\n  return (\r\n    <li className={`task-item ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n      <input \r\n        type=\"checkbox\" \r\n        checked={task.completed} \r\n        onChange={() => onToggleTask(task)} \r\n      />\r\n      <span className={task.completed ? \"completed\" : \"\"}>{task.title}</span>\r\n\r\n      {showPriority ? (\r\n        <select \r\n          value={task.priority} \r\n          onChange={(e) => onSetPriority(task, e.target.value)} \r\n        >\r\n          <option value=\"high\">High</option>\r\n          <option value=\"medium\">Medium</option>\r\n          <option value=\"low\">Low</option>\r\n        </select>\r\n      ) : (\r\n        <button onClick={() => setShowPriority(true)}>Set Priority</button>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,aAAa;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,IAAI,CAACI,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC;;EAExB,oBACEF,OAAA;IAAIS,SAAS,EAAE,aAAaJ,KAAK,KAAK,MAAM,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAK,QAAA,gBAChEV,OAAA;MACEW,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEV,IAAI,CAACW,SAAU;MACxBC,QAAQ,EAAEA,CAAA,KAAMX,YAAY,CAACD,IAAI;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFlB,OAAA;MAAMS,SAAS,EAAEP,IAAI,CAACW,SAAS,GAAG,WAAW,GAAG,EAAG;MAAAH,QAAA,EAAER,IAAI,CAACiB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAEtEX,YAAY,gBACXP,OAAA;MACEoB,KAAK,EAAElB,IAAI,CAACmB,QAAS;MACrBP,QAAQ,EAAGQ,CAAC,IAAKlB,aAAa,CAACF,IAAI,EAAEoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAV,QAAA,gBAErDV,OAAA;QAAQoB,KAAK,EAAC,MAAM;QAAAV,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClClB,OAAA;QAAQoB,KAAK,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtClB,OAAA;QAAQoB,KAAK,EAAC,KAAK;QAAAV,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAETlB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAAC,IAAI,CAAE;MAAAE,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACnE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACZ,EAAA,CA5BIL,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}