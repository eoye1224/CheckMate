{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport Analytics from \"./components/Analytics\";\nimport ThemeSelector from \"./components/ThemeSelector\";\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\"; // Make sure utils.js has these functions\nimport \"./styles/App.css\"; // Ensure the path is correct\nimport \"./styles/TaskItem.css\"; // Ensure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: \"Task 1\",\n    completed: false,\n    priority: \"medium\",\n    dueDate: \"2025-01-30\"\n  }, {\n    id: 2,\n    title: \"Task 2\",\n    completed: true,\n    priority: \"high\",\n    dueDate: \"2025-01-25\"\n  }\n  // Add more tasks as needed\n  ]);\n  const [filterStatus, setFilterStatus] = useState(\"all\");\n  const [theme, setTheme] = useState(\"light\");\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Added state for search query\n\n  const toggleDarkMode = () => {\n    setTheme(prevTheme => prevTheme === \"light\" ? \"dark\" : \"light\");\n  };\n  const handleSearch = query => {\n    setSearchQuery(query); // Set the search query state\n  };\n  const handleToggleTask = task => {\n    setTasks(tasks.map(t => t.id === task.id ? toggleTaskCompletion(t) : t));\n  };\n  const handleSetPriority = (task, priority) => {\n    setTasks(tasks.map(t => t.id === task.id ? setTaskPriority(t, priority) : t));\n  };\n\n  // Filter tasks based on search query and status filter\n  const filteredTasks = tasks.filter(task => {\n    const matchesSearch = task.title.toLowerCase().includes(searchQuery.toLowerCase());\n    const matchesStatus = filterStatus === \"all\" || filterStatus === \"completed\" && task.completed || filterStatus === \"pending\" && !task.completed;\n    return matchesSearch && matchesStatus;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: theme === \"dark\" ? \"dark-mode\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onToggleDarkMode: toggleDarkMode,\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks // Pass the filtered tasks\n      ,\n      filterStatus: filterStatus,\n      onToggleTask: handleToggleTask,\n      onSetPriority: handleSetPriority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Analytics, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSelector, {\n      onThemeChange: setTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cxzHlC+WJJLSpu29A+DULmdThx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TaskList","Analytics","ThemeSelector","toggleTaskCompletion","setTaskPriority","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","id","title","completed","priority","dueDate","filterStatus","setFilterStatus","theme","setTheme","searchQuery","setSearchQuery","toggleDarkMode","prevTheme","handleSearch","query","handleToggleTask","task","map","t","handleSetPriority","filteredTasks","filter","matchesSearch","toLowerCase","includes","matchesStatus","className","children","onToggleDarkMode","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onToggleTask","onSetPriority","onThemeChange","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport Analytics from \"./components/Analytics\";\r\nimport ThemeSelector from \"./components/ThemeSelector\";\r\nimport { toggleTaskCompletion, setTaskPriority } from \"./utils\";  // Make sure utils.js has these functions\r\nimport \"./styles/App.css\";  // Ensure the path is correct\r\nimport \"./styles/TaskItem.css\";  // Ensure the path is correct\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    { id: 1, title: \"Task 1\", completed: false, priority: \"medium\", dueDate: \"2025-01-30\" },\r\n    { id: 2, title: \"Task 2\", completed: true, priority: \"high\", dueDate: \"2025-01-25\" },\r\n    // Add more tasks as needed\r\n  ]);\r\n\r\n  const [filterStatus, setFilterStatus] = useState(\"all\");\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");  // Added state for search query\r\n\r\n  const toggleDarkMode = () => {\r\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchQuery(query);  // Set the search query state\r\n  };\r\n\r\n  const handleToggleTask = (task) => {\r\n    setTasks(tasks.map(t => t.id === task.id ? toggleTaskCompletion(t) : t));\r\n  };\r\n\r\n  const handleSetPriority = (task, priority) => {\r\n    setTasks(tasks.map(t => t.id === task.id ? setTaskPriority(t, priority) : t));\r\n  };\r\n\r\n  // Filter tasks based on search query and status filter\r\n  const filteredTasks = tasks.filter((task) => {\r\n    const matchesSearch = task.title.toLowerCase().includes(searchQuery.toLowerCase());\r\n    const matchesStatus =\r\n      filterStatus === \"all\" ||\r\n      (filterStatus === \"completed\" && task.completed) ||\r\n      (filterStatus === \"pending\" && !task.completed);\r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n  return (\r\n    <div className={theme === \"dark\" ? \"dark-mode\" : \"\"}>\r\n      <Header onToggleDarkMode={toggleDarkMode} onSearch={handleSearch} />\r\n      <TaskList\r\n        tasks={filteredTasks}  // Pass the filtered tasks\r\n        filterStatus={filterStatus}\r\n        onToggleTask={handleToggleTask}\r\n        onSetPriority={handleSetPriority}\r\n      />\r\n      <Analytics tasks={tasks} />\r\n      <ThemeSelector onThemeChange={setTheme} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}