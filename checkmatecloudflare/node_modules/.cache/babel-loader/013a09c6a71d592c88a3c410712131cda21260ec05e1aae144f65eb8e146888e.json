{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\super\\\\checkmate\\\\checkmatecloudflare\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/TaskItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onToggleTask,\n  onSetPriority,\n  theme\n}) => {\n  _s();\n  const [showPriority, setShowPriority] = useState(false);\n  if (!task) return null; // Ensure task exists before rendering\n\n  // Function to get the appropriate priority color\n  const getPriorityColor = () => {\n    switch (task.priority) {\n      case \"high\":\n        return \"#FF4D4D\";\n      // Red\n      case \"medium\":\n        return \"#FFCC00\";\n      // Yellow\n      case \"low\":\n        return \"#4DFF4D\";\n      // Green\n      default:\n        return \"#FFCC00\";\n      // Default to Yellow\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `task-item ${theme === \"dark\" ? \"dark-mode\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.completed,\n      onChange: () => onToggleTask(task)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: task.completed ? \"completed\" : \"\",\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"priority-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"priority-indicator\",\n        style: {\n          backgroundColor: getPriorityColor()\n        },\n        onClick: () => setShowPriority(!showPriority) // Toggle priority dropdown on click\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), showPriority ? /*#__PURE__*/_jsxDEV(\"select\", {\n        value: task.priority,\n        onChange: e => onSetPriority(task, e.target.value),\n        className: \"priority-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"/icM9Y97g4Jm06FUYJ/4uX3Zy60=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskItem","task","onToggleTask","onSetPriority","theme","_s","showPriority","setShowPriority","getPriorityColor","priority","className","children","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","style","backgroundColor","onClick","value","e","target","_c","$RefreshReg$"],"sources":["C:/Users/super/checkmate/checkmatecloudflare/src/components/TaskItem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/TaskItem.css\";\r\n\r\nconst TaskItem = ({ task, onToggleTask, onSetPriority, theme }) => {\r\n  const [showPriority, setShowPriority] = useState(false);\r\n\r\n  if (!task) return null; // Ensure task exists before rendering\r\n\r\n  // Function to get the appropriate priority color\r\n  const getPriorityColor = () => {\r\n    switch (task.priority) {\r\n      case \"high\":\r\n        return \"#FF4D4D\"; // Red\r\n      case \"medium\":\r\n        return \"#FFCC00\"; // Yellow\r\n      case \"low\":\r\n        return \"#4DFF4D\"; // Green\r\n      default:\r\n        return \"#FFCC00\"; // Default to Yellow\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className={`task-item ${theme === \"dark\" ? \"dark-mode\" : \"\"}`}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={task.completed}\r\n        onChange={() => onToggleTask(task)}\r\n      />\r\n      <span className={task.completed ? \"completed\" : \"\"}>{task.title}</span>\r\n\r\n      <div className=\"priority-wrapper\">\r\n        <div\r\n          className=\"priority-indicator\"\r\n          style={{ backgroundColor: getPriorityColor() }}\r\n          onClick={() => setShowPriority(!showPriority)} // Toggle priority dropdown on click\r\n        />\r\n        {showPriority ? (\r\n          <select\r\n            value={task.priority}\r\n            onChange={(e) => onSetPriority(task, e.target.value)}\r\n            className=\"priority-dropdown\"\r\n          >\r\n            <option value=\"high\">High</option>\r\n            <option value=\"medium\">Medium</option>\r\n            <option value=\"low\">Low</option>\r\n          </select>\r\n        ) : null}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}