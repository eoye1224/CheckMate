{"version":3,"sources":["App.js","index.js"],"names":["App","task","setTask","useState","tasks","setTasks","filter","setFilter","handleAddTask","event","preventDefault","trim","completed","filteredTasks","taskObj","_jsxs","Container","className","children","_jsx","Button","variant","onClick","Form","onSubmit","Control","type","placeholder","value","onChange","e","target","ListGroup","map","index","Item","style","textDecoration","Check","checked","updatedTasks","handleCompleteTask","label","newTasks","_","i","handleRemoveTask","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"kMA4EeA,MAxEf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAAOC,GAAYF,mBAAS,KAC5BG,EAAQC,GAAaJ,mBAAS,OAE/BK,EAAiBC,IACjBA,GAAOA,EAAMC,iBACG,KAAhBT,EAAKU,SACPN,EAAS,IAAID,EAAO,CAAEH,KAAMA,EAAMW,WAAW,KAC7CV,EAAQ,IACV,EAcIW,EAAgBT,EAAME,QAAQQ,GACnB,QAAXR,IACW,cAAXA,EAA+BQ,EAAQF,UAC5B,YAAXN,IAA8BQ,EAAQF,aAI5C,OACEG,eAACC,IAAS,CAACC,UAAU,OAAMC,SAAA,CACzBC,cAAA,MAAIF,UAAU,cAAaC,SAAC,6BAC5BH,eAAA,OAAKE,UAAU,mBAAkBC,SAAA,CAC/BC,cAACC,IAAM,CAACC,QAAQ,YAAYC,QAASA,IAAMf,EAAU,OAAOW,SAAC,QAC7DC,cAACC,IAAM,CAACC,QAAQ,YAAYC,QAASA,IAAMf,EAAU,aAAaW,SAAC,cACnEC,cAACC,IAAM,CAACC,QAAQ,YAAYC,QAASA,IAAMf,EAAU,WAAWW,SAAC,eAInEH,eAACQ,IAAI,CAACC,SAAUhB,EAAeS,UAAU,OAAMC,SAAA,CAC7CC,cAACI,IAAKE,QAAO,CACXC,KAAK,OACLC,YAAY,aACZC,MAAO3B,EACP4B,SAAWC,GAAM5B,EAAQ4B,EAAEC,OAAOH,SAEpCT,cAACC,IAAM,CAACC,QAAQ,UAAUC,QAASd,EAAeS,UAAU,aAAYC,SAAC,gBAK3EC,cAAA,MAAAD,SAAI,gBACJC,cAACa,IAAS,CAAAd,SACPL,EAAcoB,KAAI,CAACnB,EAASoB,IAC3BnB,eAACiB,IAAUG,KAAI,CAAalB,UAAU,oDACpCmB,MAAO,CAAEC,eAAgBvB,EAAQF,UAAY,eAAiB,QAASM,SAAA,CACvEC,cAACI,IAAKe,MAAK,CACTZ,KAAK,WACLa,QAASzB,EAAQF,UACjBiB,SAAUA,IAhDMK,KAC1B,MAAMM,EAAe,IAAIpC,GACzBoC,EAAaN,GAAOtB,WAAa4B,EAAaN,GAAOtB,UACrDP,EAASmC,EAAa,EA6CIC,CAAmBP,GACnCQ,MAAO5B,EAAQb,OAEjBkB,cAACC,IAAM,CAACC,QAAQ,SAASC,QAASA,IA7ClBY,KACxB,MAAMS,EAAWvC,EAAME,QAAO,CAACsC,EAAGC,IAAMA,IAAMX,IAC9C7B,EAASsC,EAAS,EA2C8BG,CAAiBZ,GAAOhB,SAAC,aAR9CgB,SAc/B,ECrEAa,IAASC,OACP7B,cAAC8B,IAAMC,WAAU,CAAAhC,SACfC,cAACnB,EAAG,MAENmD,SAASC,eAAe,Q","file":"static/js/main.1e943023.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Form, Button, ListGroup } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n  const [task, setTask] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  const handleAddTask = (event) => {\r\n    if (event) event.preventDefault(); // Prevent form submission from refreshing the page\r\n    if (task.trim() !== '') {\r\n      setTasks([...tasks, { task: task, completed: false }]);\r\n      setTask('');\r\n    }\r\n  };\r\n\r\n  const handleCompleteTask = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].completed = !updatedTasks[index].completed;\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const handleRemoveTask = (index) => {\r\n    const newTasks = tasks.filter((_, i) => i !== index);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const filteredTasks = tasks.filter((taskObj) => {\r\n    if (filter === 'All') return true;\r\n    if (filter === 'Completed') return taskObj.completed;\r\n    if (filter === 'Pending') return !taskObj.completed;\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h1 className=\"text-center\">ADHD-Friendly To-Do List</h1>\r\n      <div className=\"text-center mb-3\">\r\n        <Button variant=\"secondary\" onClick={() => setFilter('All')}>All</Button>\r\n        <Button variant=\"secondary\" onClick={() => setFilter('Completed')}>Completed</Button>\r\n        <Button variant=\"secondary\" onClick={() => setFilter('Pending')}>Pending</Button>\r\n      </div>\r\n      \r\n      {/* Make sure the form has an onSubmit handler */}\r\n      <Form onSubmit={handleAddTask} className=\"mb-4\">\r\n        <Form.Control \r\n          type=\"text\" \r\n          placeholder=\"Add a task\" \r\n          value={task} \r\n          onChange={(e) => setTask(e.target.value)} \r\n        />\r\n        <Button variant=\"primary\" onClick={handleAddTask} className=\"mt-2 w-100\">\r\n          Add Task\r\n        </Button>\r\n      </Form>\r\n      \r\n      <h2>Your Tasks:</h2>\r\n      <ListGroup>\r\n        {filteredTasks.map((taskObj, index) => (\r\n          <ListGroup.Item key={index} className=\"d-flex justify-content-between align-items-center\"\r\n            style={{ textDecoration: taskObj.completed ? 'line-through' : 'none' }}>\r\n            <Form.Check \r\n              type=\"checkbox\" \r\n              checked={taskObj.completed} \r\n              onChange={() => handleCompleteTask(index)} \r\n              label={taskObj.task} \r\n            />\r\n            <Button variant=\"danger\" onClick={() => handleRemoveTask(index)}>Remove</Button>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}